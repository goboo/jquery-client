{"version":3,"sources":["jquery.gobooSlotDetails.js","jquery.gobooBookingMask.js","jquery.gobooCalendar.js"],"names":[],"mappings":"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","file":"jquery.goboo-client.js","sourcesContent":["/*\n * GoBoo - GET IT. BOOK IT. [http://goboo.de]\n *\n * (c) Tristan Lins <t.lins@goboo.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * jquery client for {@link http://goboo.de goboo - GET IT. BOOK IT}\n *\n * online booking system by karo media\n *\n * @module goboo/Client/jQuery\n * @copyright 2014 {@link mailto:t.lins@goboo.de Tristan Lins}\n * @license {@link http://opensource.org/licenses/MIT MIT}\n * @author Tristan Lins <t.lins@goboo.de>\n * @link http://goboo.de\n */\n\n(function ($) {\n\t\"use strict\";\n\n\t$.gobooSlotDetails = {};\n\t$.gobooSlotDetails.defaultOptions = {\n\t\t/** id of room */\n\t\t'room': '',\n\t\t/** id of slot */\n\t\t'slot': '',\n\n\t\t'bookingMask': false,\n\n\t\t/** start datetime format */\n\t\t'startDateTimeFormat': 'dd. MM \\'\\'y hh:ii',\n\t\t/** end datetime format */\n\t\t'endDateTimeFormat': '',\n\t\t/** datetime format */\n\t\t'timeFormat': '{start} - {duration}',\n\t\t/** duration datetime format */\n\t\t'durationDateTimeFormat': 'hh:ii',\n\t\t/** play time datetime format */\n\t\t'playTimeDateTimeFormat': 'hh:ii',\n\n\t\t/** selector to id container */\n\t\t'idSelector': '[data-goboo=\"id\"]',\n\t\t/** selector to start datetime container */\n\t\t'startDateTimeSelector': '[data-goboo=\"start-datetime\"]',\n\t\t/** selector to end datetime container */\n\t\t'endDateTimeSelector': '[data-goboo=\"end-datetime\"]',\n\t\t/** selector to duration container */\n\t\t'durationSelector': '[data-goboo=\"duration\"]',\n\t\t/** selector to play time container */\n\t\t'playTimeSelector': '[data-goboo=\"play-time\"]',\n\t\t/** selector to capacity container */\n\t\t'capacitySelector': '[data-goboo=\"capacity\"]',\n\t\t/** selector to attendance container */\n\t\t'attendanceSelector': '[data-goboo=\"attendance\"]',\n\t\t/** selector to availableModes container */\n\t\t'modesSelector': '[data-goboo=\"modes\"]',\n\n\t\t/** selector to time container */\n\t\t'timeSelector': '[data-goboo=\"time\"]',\n\t\t/** selector to duration datetime container */\n\t\t'durationDateTimeSelector': '[data-goboo=\"duration-datetime\"]',\n\t\t/** selector to play time datetime container */\n\t\t'playTimeDateTimeSelector': '[data-goboo=\"play-time-datetime\"]',\n\n\t\t/** selector to book action element */\n\t\t'bookActionSelector': '.goboo_book_action',\n\n\t\t'idFormatter': function(id, slot, options) {\n\t\t\treturn id;\n\t\t},\n\t\t'startDateTimeFormatter': function(startDateTime, slot, options) {\n\t\t\treturn $.formatDateTime(options.startDateTimeFormat, startDateTime);\n\t\t},\n\t\t'endDateTimeFormatter': function(endDateTime, slot, options) {\n\t\t\treturn $.formatDateTime(options.endDateTimeFormat, endDateTime);\n\t\t},\n\t\t'durationFormatter': function(duration, slot, options) {\n\t\t\treturn Math.round(duration);\n\t\t},\n\t\t'playTimeFormatter': function(playTime, slot, options) {\n\t\t\treturn Math.round(playTime);\n\t\t},\n\t\t'capacityFormatter': function(capacity, slot, options) {\n\t\t\treturn capacity;\n\t\t},\n\t\t'attendanceFormatter': function(attendance, slot, options) {\n\t\t\treturn attendance;\n\t\t},\n\t\t'modesFormatter': function(modes, slot, options) {\n\t\t\tvar elements = [];\n\n\t\t\tvar maxVotes = 0;\n\t\t\t$.each(modes, function(token, mode) {\n\t\t\t\tif ((mode.getMinAttendance() === null || slot.getAttendance() >= mode.getMinAttendance()) &&\n\t\t\t\t\t(mode.getMaxAttendance() === null || slot.getAttendance() <= mode.getMaxAttendance())) {\n\t\t\t\t\tmaxVotes = Math.max(mode.getVotes(), maxVotes);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$.each(modes, function(token, mode) {\n\t\t\t\tvar abbr = $('<abbr></abbr>')\n\t\t\t\t\t.attr('title', mode.getDescription())\n\t\t\t\t\t.attr('data-goboo-votes', mode.getVotes())\n\t\t\t\t\t.text(mode.getLabel());\n\n\t\t\t\tif (mode.getMinAttendance() !== null && slot.getAttendance() < mode.getMinAttendance() ||\n\t\t\t\t\tmode.getMaxAttendance() !== null && slot.getAttendance() > mode.getMaxAttendance()) {\n\t\t\t\t\tabbr.addClass('goboo_mode_invalid');\n\t\t\t\t}\n\t\t\t\telse if (maxVotes > 0 && mode.getVotes() >= maxVotes) {\n\t\t\t\t\tabbr.addClass('goboo_mode_prefered');\n\t\t\t\t}\n\n\t\t\t\telements.push(abbr.get(0));\n\t\t\t});\n\n\t\t\treturn elements;\n\t\t},\n\t\t'timeFormatter': function(slot, options) {\n\t\t\treturn options.patternFormatter(options.timeFormat, slot, options);\n\t\t},\n\t\t'durationDateTimeFormatter': function(duration, slot, options) {\n\t\t\tvar hours = parseInt(duration / 60);\n\t\t\tvar minutes = duration % 60;\n\t\t\tvar durationDateTime = new Date();\n\t\t\tdurationDateTime.setTime(0);\n\t\t\tdurationDateTime.setHours(hours);\n\t\t\tdurationDateTime.setMinutes(minutes);\n\t\t\tdurationDateTime.setSeconds(0);\n\t\t\treturn $.formatDateTime(options.durationDateTimeFormat, durationDateTime);\n\t\t},\n\t\t'playTimeDateTimeFormatter': function(playTime, slot, options) {\n\t\t\tvar hours = parseInt(playTime / 60);\n\t\t\tvar minutes = playTime % 60;\n\t\t\tvar playTimeDateTime = new Date();\n\t\t\tplayTimeDateTime.setTime(0);\n\t\t\tplayTimeDateTime.setHours(hours);\n\t\t\tplayTimeDateTime.setMinutes(minutes);\n\t\t\tplayTimeDateTime.setSeconds(0);\n\t\t\treturn $.formatDateTime(options.playTimeDateTimeFormat, playTimeDateTime);\n\t\t},\n\t\t'patternFormatter': function(buffer, slot, options) {\n\t\t\tvar elements = [];\n\t\t\tvar rgxp = /\\{\\w+\\}/;\n\t\t\tvar pos;\n\t\t\twhile ((pos = buffer.search(rgxp)) !== -1) {\n\t\t\t\tvar pre = buffer.substr(0, pos);\n\t\t\t\tbuffer = buffer.substr(pos);\n\n\t\t\t\tif (pre) {\n\t\t\t\t\telements.push(document.createTextNode(pre));\n\t\t\t\t}\n\n\t\t\t\tpos = buffer.search('}');\n\t\t\t\tvar field = buffer.substring(1, pos);\n\t\t\t\tvar value = options.fieldFormatter(field, slot, options);\n\t\t\t\tif ($.isArray(value)) {\n\t\t\t\t\t$.each(value, function(index, element) {\n\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\telements.push(document.createTextNode(value));\n\t\t\t\t}\n\n\t\t\t\tbuffer = buffer.substr(pos+1);\n\t\t\t}\n\n\t\t\tif (buffer) {\n\t\t\t\telements.push(document.createTextNode(buffer));\n\t\t\t}\n\n\t\t\treturn elements;\n\t\t},\n\t\t'fieldFormatter': function (field, slot, options) {\n\t\t\tswitch (field) {\n\t\t\t\tcase 'id':\n\t\t\t\t\treturn options.idFormatter(slot.getId(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'start':\n\t\t\t\tcase 'startDateTime':\n\t\t\t\t\treturn options.startDateTimeFormatter(slot.getStartDateTime(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'end':\n\t\t\t\tcase 'endDateTime':\n\t\t\t\t\treturn options.endDateTimeFormatter(slot.getEndDateTime(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'duration':\n\t\t\t\t\treturn options.durationFormatter(slot.getDuration(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'playTime':\n\t\t\t\t\treturn options.playTimeFormatter(slot.getPlayTime() || slot.getDuration(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'durationDateTime':\n\t\t\t\t\treturn options.durationDateTimeFormatter(slot.getDuration(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'playTimeDateTime':\n\t\t\t\t\treturn options.playTimeDateTimeFormatter(slot.getPlayTime() || slot.getDuration(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'capacity':\n\t\t\t\t\treturn options.capacityFormatter(slot.getCapacity(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'attendance':\n\t\t\t\t\treturn options.attendanceFormatter(slot.getAttendance(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'modes':\n\t\t\t\tcase 'availableModes':\n\t\t\t\t\treturn options.modesFormatter(slot.getAvailableModes(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar formatter = field + 'Formatter';\n\t\t\t\t\tif (options[formatter]) {\n\t\t\t\t\t\treturn options[formatter](slot, options);\n\t\t\t\t\t}\n\t\t\t\t\tthrow \"Could not format slot field \" + field + \", no formatter available!\";\n\t\t\t}\n\t\t},\n\n\t\t'showBookingMask': function(slot) {\n\t\t\talert('You must define the showBookingMask(slot) function!');\n\t\t},\n\n\t\t'preRender': function() {\n\t\t},\n\t\t'postRender': function() {\n\t\t\tvar players = this.container.find('.goboo_players');\n\n\t\t\tif (players.size()) {\n\t\t\t\tvar classes = \"\" + players.prop('class');\n\t\t\t\tclasses = classes.replace(/goboo_players_count_\\d+/, '');\n\t\t\t\tclasses = classes.replace(/goboo_players_\\d+/, '');\n\t\t\t\tplayers.prop('class', classes);\n\t\t\t\tplayers\n\t\t\t\t\t.addClass('goboo_players_count_' + this.currentSlot.getCapacity())\n\t\t\t\t\t.addClass('goboo_players_' + this.currentSlot.getAttendance());\n\n\t\t\t\tplayers.find('*[data-goboo=\"attendance\"]').text(this.currentSlot.getAttendance());\n\t\t\t}\n\t\t},\n\t\t'renderBookAction': function() {\n\t\t\tvar self = this;\n\t\t\tvar selector = this.options.bookActionSelector;\n\t\t\tvar button = this.container.find(selector);\n\n\t\t\tif (this.currentSlot.getAttendance() >= this.currentSlot.getCapacity()) {\n\t\t\t\tbutton.addClass('goboo_disabled');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbutton.removeClass('goboo_disabled');\n\t\t\t}\n\n\t\t\tbutton.off('click');\n\t\t\tbutton.click(function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.options.showBookingMask.call(self, self.currentSlot);\n\t\t\t});\n\t\t},\n\t\t'render': function() {\n\t\t\tvar self = this;\n\t\t\tvar slot = self.currentSlot;\n\t\t\tself.options.preRender.call(self);\n\n\t\t\tvar selectors = {};\n\t\t\tvar selectorRegexp = /^(\\w+)Selector$/;\n\t\t\tvar actionRegexp = /Action$/;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tvar match = selectorRegexp.exec(key);\n\t\t\t\tif (match && !actionRegexp.test(match[1])) {\n\t\t\t\t\tselectors[match[1]] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\t$.each(selectors, function(field, selector) {\n\t\t\t\tvar elements = self.container.find(selector);\n\t\t\t\tif (elements.length) {\n\t\t\t\t\tvar value = self.options.fieldFormatter(field, slot, self.options);\n\n\t\t\t\t\telements\n\t\t\t\t\t\t.empty()\n\t\t\t\t\t\t.append(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tself.options.renderBookAction.call(self);\n\n\t\t\tself.options.postRender.call(self);\n\t\t}\n\t};\n\n\t/**\n\t * Create a new booking mask to integrate goboo booking system.\n\t *\n\t * @memberOf jQuery\n\t * @access public\n\t * @param object options\n\t */\n\t$.fn.gobooSlotDetails = function (options) {\n\t\tif (!goboo.env.adapter) {\n\t\t\tthrow 'You need to initialize the goboo environment first!';\n\t\t}\n\n\t\tvar element = $(this[0]);\n\t\tvar templateOptions = {};\n\t\t$.each(\n\t\t\t{\n\t\t\t\t'room': 'room',\n\t\t\t\t'slot': 'slot',\n\t\t\t\t'bookingMask': 'booking-mask',\n\t\t\t\t'startDateTimeFormat': 'start-datetime-format',\n\t\t\t\t'endDateTimeFormat': 'end-datetime-format',\n\t\t\t\t'timeFormat': 'date-format',\n\t\t\t\t'durationDateTimeFormat': 'duration-time-format',\n\t\t\t\t'playTimeDateTimeFormat': 'play-time-time-format',\n\t\t\t\t'idSelector': 'id-selector',\n\t\t\t\t'startDateTimeSelector': 'start-datetime-selector',\n\t\t\t\t'endDateTimeSelector': 'end-datetime-selector',\n\t\t\t\t'durationSelector': 'duration-selector',\n\t\t\t\t'playTimeSelector': 'play-time-selector',\n\t\t\t\t'capacitySelector': 'capacity-selector',\n\t\t\t\t'attendanceSelector': 'attendance-selector',\n\t\t\t\t'modesSelector': 'modes-selector',\n\t\t\t\t'timeSelector': 'time-selector',\n\t\t\t\t'durationDateTimeSelector': 'duration-datetime-selector',\n\t\t\t\t'playTimeDateTimeSelector': 'play-time-datetime-selector',\n\t\t\t\t'bookActionSelector': 'book-action-selector'\n\t\t\t},\n\t\t\tfunction(option, key) {\n\t\t\t\tvar value = element.data('goboo-' + key);\n\t\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\t\ttemplateOptions[option] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\toptions = $.extend({}, $.gobooSlotDetails.defaultOptions, options || {}, templateOptions);\n\n\t\tnew (function(container, options) {\n\t\t\tvar self = this;\n\t\t\tself.container = container;\n\t\t\tself.options = options;\n\t\t\tself.currentSlot = null;\n\n\t\t\tself.loadSlot = function(slot) {\n\t\t\t\tif (!slot) {\n\t\t\t\t\tself.options.slot = null;\n\t\t\t\t\tself.currentSlot = null;\n\t\t\t\t\tself.container\n\t\t\t\t\t\t.removeClass('goboo_loading')\n\t\t\t\t\t\t.addClass('goboo_no_slot');\n\t\t\t\t\tself.container.trigger('goboo:slot-details:change-slot', null);\n\t\t\t\t}\n\t\t\t\telse if (slot instanceof goboo.Slot) {\n\t\t\t\t\tself.options.slot = slot.getId();\n\t\t\t\t\tself.currentSlot = slot;\n\t\t\t\t\toptions.render.call(self);\n\t\t\t\t\tself.container\n\t\t\t\t\t\t.removeClass('goboo_loading')\n\t\t\t\t\t\t.removeClass('goboo_no_slot');\n\t\t\t\t\tself.container.trigger('goboo:slot-details:change-slot', slot);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tself.container.addClass('goboo_loading');\n\t\t\t\t\tgoboo.env.adapter.getSlot(\n\t\t\t\t\t\tself.options.room,\n\t\t\t\t\t\tslot,\n\t\t\t\t\t\tfunction(slot) {\n\t\t\t\t\t\t\tself.loadSlot(slot);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tcontainer.data(\n\t\t\t\t'goboo',\n\t\t\t\t{\n\t\t\t\t\t'options': options,\n\t\t\t\t\t'setSlot': function (slot, room) {\n\t\t\t\t\t\tif (room !== undefined) {\n\t\t\t\t\t\t\toptions.room = room;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptions.slot = slot;\n\t\t\t\t\t\tself.loadSlot(options.slot);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (options.room && options.slot) {\n\t\t\t\tself.loadSlot(options.slot);\n\t\t\t}\n\t\t\tself.container.removeClass('goboo_initializing');\n\t\t})(element, options);\n\n\t\treturn this;\n\t};\n})(jQuery);\n","/*\n * GoBoo - GET IT. BOOK IT. [http://goboo.de]\n *\n * (c) Tristan Lins <t.lins@goboo.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * jquery client for {@link http://goboo.de goboo - GET IT. BOOK IT}\n *\n * online booking system by karo media\n *\n * @module goboo/Client/jQuery\n * @copyright 2014 {@link mailto:t.lins@goboo.de Tristan Lins}\n * @license {@link http://opensource.org/licenses/MIT MIT}\n * @author Tristan Lins <t.lins@goboo.de>\n * @link http://goboo.de\n */\n\n(function ($) {\n\t\"use strict\";\n\n\t$.gobooBookingMask = {};\n\t$.gobooBookingMask.defaultOptions = {\n\t\t/** id of room */\n\t\t'room': '',\n\t\t/** id of slot */\n\t\t'slot': '',\n\n\t\t'bookingMask': false,\n\n\t\t/**\n\t\t * define how successors can be selected,\n\t\t *\n\t\t * false          - disable successors selection (you need to remove the HTML from the template)\n\t\t * 'subsequent'   - only select subsequent slots (radio)\n\t\t * 'undetermined' - the successors are free to choose (checkbox)\n\t\t */\n\t\t'successorsSelectionMode': 'subsequent',\n\t\t/**\n\t\t * Label for the \"no more slots\" selection in \"subsequent\" selection mode.\n\t\t */\n\t\t'successorNoSelectionLabel': '-',\n\n\t\t/** start datetime format */\n\t\t'startDateTimeFormat': 'dd. MM \\'\\'y hh:ii',\n\t\t/** end datetime format */\n\t\t'endDateTimeFormat': '',\n\t\t/** datetime format */\n\t\t'timeFormat': '{start} - {duration}',\n\t\t/** duration datetime format */\n\t\t'durationDateTimeFormat': 'hh:ii',\n\t\t/** play time datetime format */\n\t\t'playTimeDateTimeFormat': 'hh:ii',\n\t\t/** successor datetime format */\n\t\t'successorDateTimeFormat': 'hh:ii',\n\n\t\t/** selector to id container */\n\t\t'idSelector': '[data-goboo=\"id\"]',\n\t\t/** selector to start datetime container */\n\t\t'startDateTimeSelector': '[data-goboo=\"start-datetime\"]',\n\t\t/** selector to end datetime container */\n\t\t'endDateTimeSelector': '[data-goboo=\"end-datetime\"]',\n\t\t/** selector to playTime container */\n\t\t'durationSelector': '[data-goboo=\"duration\"]',\n\t\t/** selector to play time container */\n\t\t'playTimeSelector': '[data-goboo=\"play-time\"]',\n\t\t/** selector to capacity container */\n\t\t'capacitySelector': '[data-goboo=\"capacity\"]',\n\t\t/** selector to attendance container */\n\t\t'attendanceSelector': '[data-goboo=\"attendance\"]',\n\t\t/** selector to availableModes container */\n\t\t'modesSelector': '[data-goboo=\"modes\"]',\n\n\t\t/** selector to time container */\n\t\t'timeSelector': '[data-goboo=\"time\"]',\n\t\t/** selector to duration datetime container */\n\t\t'durationDateTimeSelector': '[data-goboo=\"duration-datetime\"]',\n\t\t/** selector to play time datetime container */\n\t\t'playTimeDateTimeSelector': '[data-goboo=\"play-time-datetime\"]',\n\n\t\t/** selector to form element */\n\t\t'formInputSelector': 'form',\n\t\t/** selector to name input element */\n\t\t'nameInputSelector': 'input[name=\"name\"]',\n\t\t/** selector to mobile input element */\n\t\t'mobileInputSelector': 'input[name=\"mobile\"]',\n\t\t/** selector to email input element */\n\t\t'emailInputSelector': 'input[name=\"email\"]',\n\t\t/** selector to mode vote input element */\n\t\t'modeInputSelector': '.goboo_game_mode_vote',\n\t\t/** selector to player count input element */\n\t\t'playerCountInputSelector': 'select[name=\"player_count\"]',\n\t\t/** selector to players input element */\n\t\t'playersInputSelector': '#goboo_players',\n\t\t/** selector to exclusive input element */\n\t\t'exclusiveInputSelector': 'input[name=\"exclusive\"]',\n\t\t/** selector to successors loader element */\n\t\t'successorsLoaderActionSelector': '.goboo_booking_successors_loader',\n\t\t/** selector to successors selection container element */\n\t\t'successorsContainerInputSelector': '.goboo_booking_successors_selection',\n\t\t/** selector to notes input element */\n\t\t'notesInputSelector': 'input[name=\"notes\"],textarea[name=\"notes\"]',\n\n\t\t/** selector to book action button element */\n\t\t'bookActionSelector': '.goboo_book_action',\n\n\t\t'idFormatter': function(id, slot, options) {\n\t\t\treturn id;\n\t\t},\n\t\t'startDateTimeFormatter': function(startDateTime, slot, options) {\n\t\t\treturn $.formatDateTime(options.startDateTimeFormat, startDateTime);\n\t\t},\n\t\t'endDateTimeFormatter': function(endDateTime, slot, options) {\n\t\t\treturn $.formatDateTime(options.endDateTimeFormat, endDateTime);\n\t\t},\n\t\t'durationFormatter': function(duration, slot, options) {\n\t\t\treturn Math.round(duration);\n\t\t},\n\t\t'playTimeFormatter': function(playTime, slot, options) {\n\t\t\treturn Math.round(playTime);\n\t\t},\n\t\t'capacityFormatter': function(capacity, slot, options) {\n\t\t\treturn capacity;\n\t\t},\n\t\t'attendanceFormatter': function(attendance, slot, options) {\n\t\t\treturn attendance;\n\t\t},\n\t\t'modesFormatter': function(modes, slot, options) {\n\t\t\tvar elements = [];\n\n\t\t\tvar maxVotes = 0;\n\t\t\t$.each(modes, function(token, mode) {\n\t\t\t\tif ((mode.getMinAttendance() === null || slot.getAttendance() >= mode.getMinAttendance()) &&\n\t\t\t\t\t(mode.getMaxAttendance() === null || slot.getAttendance() <= mode.getMaxAttendance())) {\n\t\t\t\t\tmaxVotes = Math.max(mode.getVotes(), maxVotes);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$.each(modes, function(token, mode) {\n\t\t\t\tvar abbr = $('<abbr></abbr>')\n\t\t\t\t\t.attr('title', mode.getDescription())\n\t\t\t\t\t.attr('data-goboo-votes', mode.getVotes())\n\t\t\t\t\t.text(mode.getLabel());\n\n\t\t\t\tif (mode.getMinAttendance() !== null && slot.getAttendance() < mode.getMinAttendance() ||\n\t\t\t\t\tmode.getMaxAttendance() !== null && slot.getAttendance() > mode.getMaxAttendance()) {\n\t\t\t\t\tabbr.addClass('goboo_mode_invalid');\n\t\t\t\t}\n\t\t\t\telse if (maxVotes > 0 && mode.getVotes() >= maxVotes) {\n\t\t\t\t\tabbr.addClass('goboo_mode_prefered');\n\t\t\t\t}\n\n\t\t\t\telements.push(abbr.get(0));\n\t\t\t});\n\n\t\t\treturn elements;\n\t\t},\n\t\t'timeFormatter': function(slot, options) {\n\t\t\treturn options.patternFormatter(options.timeFormat, slot, options);\n\t\t},\n\t\t'durationDateTimeFormatter': function(duration, slot, options) {\n\t\t\tvar hours = parseInt(duration / 60);\n\t\t\tvar minutes = duration % 60;\n\t\t\tvar durationDateTime = new Date();\n\t\t\tdurationDateTime.setTime(0);\n\t\t\tdurationDateTime.setHours(hours);\n\t\t\tdurationDateTime.setMinutes(minutes);\n\t\t\tdurationDateTime.setSeconds(0);\n\t\t\treturn $.formatDateTime(options.durationDateTimeFormat, durationDateTime);\n\t\t},\n\t\t'playTimeDateTimeFormatter': function(playTime, slot, options) {\n\t\t\tvar hours = parseInt(playTime / 60);\n\t\t\tvar minutes = playTime % 60;\n\t\t\tvar playTimeDateTime = new Date();\n\t\t\tplayTimeDateTime.setTime(0);\n\t\t\tplayTimeDateTime.setHours(hours);\n\t\t\tplayTimeDateTime.setMinutes(minutes);\n\t\t\tplayTimeDateTime.setSeconds(0);\n\t\t\treturn $.formatDateTime(options.playTimeDateTimeFormat, playTimeDateTime);\n\t\t},\n\t\t'patternFormatter': function(buffer, slot, options) {\n\t\t\tvar elements = [];\n\t\t\tvar rgxp = /\\{\\w+\\}/;\n\t\t\tvar pos;\n\t\t\twhile ((pos = buffer.search(rgxp)) !== -1) {\n\t\t\t\tvar pre = buffer.substr(0, pos);\n\t\t\t\tbuffer = buffer.substr(pos);\n\n\t\t\t\tif (pre) {\n\t\t\t\t\telements.push(document.createTextNode(pre));\n\t\t\t\t}\n\n\t\t\t\tpos = buffer.search('}');\n\t\t\t\tvar field = buffer.substring(1, pos);\n\t\t\t\tvar value = options.fieldFormatter(field, slot, options);\n\t\t\t\tif ($.isArray(value)) {\n\t\t\t\t\t$.each(value, function(index, element) {\n\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\telements.push(document.createTextNode(value));\n\t\t\t\t}\n\n\t\t\t\tbuffer = buffer.substr(pos+1);\n\t\t\t}\n\n\t\t\tif (buffer) {\n\t\t\t\telements.push(document.createTextNode(buffer));\n\t\t\t}\n\n\t\t\treturn elements;\n\t\t},\n\t\t'fieldFormatter': function (field, slot, options) {\n\t\t\tswitch (field) {\n\t\t\t\tcase 'id':\n\t\t\t\t\treturn options.idFormatter(slot.getId(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'start':\n\t\t\t\tcase 'startDateTime':\n\t\t\t\t\treturn options.startDateTimeFormatter(slot.getStartDateTime(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'end':\n\t\t\t\tcase 'endDateTime':\n\t\t\t\t\treturn options.endDateTimeFormatter(slot.getEndDateTime(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'duration':\n\t\t\t\t\treturn options.durationFormatter(slot.getDuration(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'playTime':\n\t\t\t\t\treturn options.durationFormatter(slot.getPlayTime() || slot.getDuration(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'durationDateTime':\n\t\t\t\t\treturn options.durationDateTimeFormatter(slot.getDuration(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'playTimeDateTime':\n\t\t\t\t\treturn options.playTimeDateTimeFormatter(slot.getPlayTime() || slot.getDuration(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'capacity':\n\t\t\t\t\treturn options.capacityFormatter(slot.getCapacity(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'attendance':\n\t\t\t\t\treturn options.attendanceFormatter(slot.getAttendance(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'modes':\n\t\t\t\tcase 'availableModes':\n\t\t\t\t\treturn options.modesFormatter(slot.getAvailableModes(), slot, options);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar formatter = field + 'Formatter';\n\t\t\t\t\tif (options[formatter]) {\n\t\t\t\t\t\treturn options[formatter](slot, options);\n\t\t\t\t\t}\n\t\t\t\t\tthrow \"Could not format slot field \" + field + \", no formatter available!\";\n\t\t\t}\n\t\t},\n\n\t\t'preRender': function() {\n\t\t},\n\t\t'postRender': function() {\n\t\t\tvar players = this.container.find('.goboo_players');\n\n\t\t\tif (players.size()) {\n\t\t\t\tvar classes = \"\" + players.prop('class');\n\t\t\t\tclasses = classes.replace(/goboo_players_count_\\d+/, '');\n\t\t\t\tclasses = classes.replace(/goboo_players_\\d+/, '');\n\t\t\t\tplayers.prop('class', classes);\n\t\t\t\tplayers\n\t\t\t\t\t.addClass('goboo_players_count_' + this.currentSlot.getCapacity())\n\t\t\t\t\t.addClass('goboo_players_' + (1 + this.currentSlot.getAttendance()));\n\n\t\t\t\tplayers.find('*[data-goboo=\"attendance\"]').text(1 + this.currentSlot.getAttendance());\n\t\t\t}\n\t\t},\n\t\t'renderForm': function(slot, callback) {\n\t\t\tvar selector = this.options.formInputSelector;\n\t\t\tcallback(this.container.find(selector));\n\t\t},\n\t\t'renderNameInput': function(slot, callback) {\n\t\t\tvar selector = this.options.nameInputSelector;\n\t\t\tcallback(this.container.find(selector));\n\t\t},\n\t\t'renderMobileInput': function(slot, callback) {\n\t\t\tvar selector = this.options.mobileInputSelector;\n\t\t\tcallback(this.container.find(selector));\n\t\t},\n\t\t'renderEmailInput': function(slot, callback) {\n\t\t\tvar selector = this.options.emailInputSelector;\n\t\t\tcallback(this.container.find(selector));\n\t\t},\n\t\t'renderModeInput': function(slot, callback) {\n\t\t\tif (this.currentSlot.getAvailableModes().length) {\n\t\t\t\tthis.container.removeClass('goboo_no_modes');\n\n\t\t\t\tif (!this.modeVoteDummy) {\n\t\t\t\t\tvar selector = this.options.modeInputSelector;\n\t\t\t\t\tthis.modeVoteDummy = this.container.find(selector);\n\t\t\t\t\tthis.modeVoteContainer = this.modeVoteDummy.parent();\n\t\t\t\t\tthis.modeVoteDummy.detach();\n\t\t\t\t}\n\n\t\t\t\tif (this.modeVoteDummy) {\n\t\t\t\t\tthis.modeVoteContainer.empty();\n\n\t\t\t\t\tvar modes = this.currentSlot.getAvailableModes();\n\t\t\t\t\tvar elements = [];\n\t\t\t\t\t$.each(modes, $.proxy(function(index, mode) {\n\t\t\t\t\t\tvar element = this.modeVoteDummy.clone();\n\t\t\t\t\t\telement.find('input').val(mode.getToken());\n\t\t\t\t\t\telement.append(' ').append(mode.getDescription());\n\t\t\t\t\t\telements.push(element.get(0));\n\t\t\t\t\t}, this));\n\t\t\t\t}\n\n\t\t\t\tthis.modeVoteContainer.append(elements);\n\n\t\t\t\tcallback($(elements));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.container.addClass('goboo_no_modes');\n\t\t\t\tcallback($());\n\t\t\t}\n\t\t},\n\t\t'renderPlayerCountInput': function(slot, callback) {\n\t\t\tvar selector = this.options.playerCountInputSelector;\n\t\t\tvar select = this.container.find(selector);\n\n\t\t\tselect.empty();\n\t\t\tfor (var count = 1; count <= (slot.getCapacity() - slot.getAttendance()); count ++) {\n\t\t\t\tselect.append($('<option></option>').val(count).text(count + ' Spieler'));\n\t\t\t}\n\n\t\t\tvar players = this.container.find('.goboo_players');\n\n\t\t\tif (players.size()) {\n\t\t\t\tselect.change(function() {\n\t\t\t\t\tvar classes = \"\" + players.prop('class');\n\t\t\t\t\tclasses = classes.replace(/goboo_players_count_\\d+/, '');\n\t\t\t\t\tclasses = classes.replace(/goboo_players_\\d+/, '');\n\t\t\t\t\tplayers.prop('class', classes);\n\t\t\t\t\tplayers\n\t\t\t\t\t\t.addClass('goboo_players_count_' + slot.getCapacity())\n\t\t\t\t\t\t.addClass('goboo_players_' + (parseInt(select.val()) + slot.getAttendance()));\n\n\t\t\t\t\tplayers.find('*[data-goboo=\"attendance\"]').text(parseInt(select.val()) + slot.getAttendance());\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback(select);\n\t\t},\n\t\t'renderPlayersInput': function(slot, callback) {\n\t\t\tvar playerCountSelector = this.options.playerCountInputSelector;\n\t\t\tvar playerCountInput    = this.container.find(playerCountSelector);\n\n\t\t\tvar playersSelector = this.options.playersInputSelector;\n\t\t\tvar playersList     = this.container.find(playersSelector);\n\n\t\t\tplayersList = playersList\n\t\t\t\t.clone(false, false)\n\t\t\t\t.replaceAll(playersList);\n\n\t\t\tplayersList.empty();\n\t\t\tplayersList.tagit({\n\t\t\t\tplaceholderText: 'Nickname...',\n\t\t\t\tbeforeTagAdded: function(event, ui) {\n\t\t\t\t\tvar tags     = playersList.tagit(\"assignedTags\");\n\t\t\t\t\tvar tagCount = tags.length;\n\n\t\t\t\t\treturn (slot.getCapacity() - slot.getAttendance()) > tagCount;\n\t\t\t\t},\n\t\t\t\tafterTagAdded: function(event, ui) {\n\t\t\t\t\tvar tags     = playersList.tagit(\"assignedTags\");\n\t\t\t\t\tvar tagCount = tags.length;\n\n\t\t\t\t\tif (playerCountInput.val() < tagCount) {\n\t\t\t\t\t\tplayerCountInput.val(tagCount).change();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(playersList);\n\t\t},\n\t\t'renderExclusiveInput': function(slot, callback) {\n\t\t\tvar selector = this.options.playerCountInputSelector;\n\t\t\tvar select = this.container.find(selector);\n\n\t\t\tselector = this.options.exclusiveInputSelector;\n\t\t\tvar input = this.container.find(selector);\n\n\t\t\tif (slot.getAttendance() > 0) {\n\t\t\t\tinput.prop('disabled', true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar self = this;\n\n\t\t\t\tinput.prop('disabled', false);\n\t\t\t\tinput.off('change').change(function() {\n\t\t\t\t\tif (input.prop('checked')) {\n\t\t\t\t\t\tvar players = self.container.find('.goboo_players');\n\n\t\t\t\t\t\tif (players.size()) {\n\t\t\t\t\t\t\tvar classes = \"\" + players.prop('class');\n\t\t\t\t\t\t\tclasses = classes.replace(/goboo_players_count_\\d+/, '');\n\t\t\t\t\t\t\tclasses = classes.replace(/goboo_players_\\d+/, '');\n\t\t\t\t\t\t\tplayers.prop('class', classes);\n\t\t\t\t\t\t\tplayers\n\t\t\t\t\t\t\t\t.addClass('goboo_players_count_' + slot.getCapacity())\n\t\t\t\t\t\t\t\t.addClass('goboo_players_' + slot.getCapacity());\n\n\t\t\t\t\t\t\tplayers.find('*[data-goboo=\"attendance\"]').text(slot.getCapacity());\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tselect.prop('disabled', true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tselect.prop('disabled', false);\n\t\t\t\t\t\tselect.change();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tinput.prop('checked', false);\n\n\t\t\tcallback(input);\n\t\t},\n\t\t'renderSuccessorsInput': function(slot, callback) {\n\t\t\tif (!this.options.successorsSelectionMode) {\n\t\t\t\tcallback(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar self = this;\n\n\t\t\tvar loaderSelector = this.options.successorsLoaderActionSelector;\n\t\t\tvar loaderContainer = this.container.find(loaderSelector);\n\n\t\t\tvar selectionContainerSelector = this.options.successorsContainerInputSelector;\n\t\t\tvar selectionContainer = this.container.find(selectionContainerSelector);\n\n\t\t\tloaderContainer.show();\n\t\t\tselectionContainer.empty().hide();\n\t\t\tgoboo.env.adapter.listSlotSuccessors(slot, false, function(slots) {\n\t\t\t\tvar inputs = $();\n\n\t\t\t\tif (self.options.successorsSelectionMode == 'subsequent') {\n\t\t\t\t\tvar input = $('<input>')\n\t\t\t\t\t\t.attr('type', 'radio')\n\t\t\t\t\t\t.attr('name', 'successors')\n\t\t\t\t\t\t.prop('checked', true);\n\n\t\t\t\t\tvar label = $('<label></label>');\n\t\t\t\t\tlabel\n\t\t\t\t\t\t.append(input)\n\t\t\t\t\t\t.append(' ')\n\t\t\t\t\t\t.append(self.options.successorNoSelectionLabel);\n\n\t\t\t\t\tvar row = $('<div class=\"goboo_radio\"></div>')\n\t\t\t\t\trow.append(label);\n\n\t\t\t\t\tselectionContainer.append(row);\n\t\t\t\t}\n\n\t\t\t\tfor (var index in slots) {\n\t\t\t\t\tvar slot = slots[index];\n\n\t\t\t\t\tvar input = $('<input>');\n\n\t\t\t\t\tif (self.options.successorsSelectionMode == 'undetermined') {\n\t\t\t\t\t\tinput.attr('type', 'checkbox');\n\t\t\t\t\t}\n\t\t\t\t\telse if (self.options.successorsSelectionMode == 'subsequent') {\n\t\t\t\t\t\tinput.attr('type', 'radio');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow 'Unsupported successors selection mode: ' + self.options.successorsSelectionMode;\n\t\t\t\t\t}\n\n\t\t\t\t\tinput.data('slot', slot);\n\t\t\t\t\tinput.attr('name', 'successors');\n\t\t\t\t\tinput.val(slot.getId());\n\t\t\t\t\tinputs.push(input);\n\n\t\t\t\t\tvar label = $('<label></label>');\n\t\t\t\t\tlabel\n\t\t\t\t\t\t.append(input)\n\t\t\t\t\t\t.append(' ')\n\t\t\t\t\t\t.append($.formatDateTime(self.options.successorDateTimeFormat, slot.getStartDateTime()));\n\n\t\t\t\t\tvar row = $('<div class=\"goboo_radio\"></div>')\n\t\t\t\t\trow.append(label);\n\n\t\t\t\t\tselectionContainer.append(row);\n\t\t\t\t}\n\n\t\t\t\tloaderContainer.hide();\n\t\t\t\tselectionContainer.show();\n\n\t\t\t\tcallback(inputs);\n\t\t\t});\n\t\t},\n\t\t'renderNotesInput': function(slot, callback) {\n\t\t\tvar selector = this.options.notesInputSelector;\n\t\t\tcallback(this.container.find(selector));\n\t\t},\n\t\t'renderBookAction': function(slot, callback) {\n\t\t\tvar selector = this.options.bookActionSelector;\n\t\t\tvar button = this.container.find(selector);\n\n\t\t\tif (slot.getAttendance() >= slot.getCapacity()) {\n\t\t\t\tbutton.addClass('disabled');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbutton.removeClass('disabled');\n\t\t\t}\n\n\t\t\tcallback(button);\n\t\t},\n\t\t'render': function() {\n\t\t\tvar self = this;\n\t\t\tvar slot = self.currentSlot;\n\t\t\tself.options.preRender.call(self);\n\n\t\t\tvar selectors = {};\n\t\t\tvar selectorRegexp = /^(\\w+)Selector$/;\n\t\t\tvar skipRegexp = /(Input|Action)$/;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tvar match = selectorRegexp.exec(key);\n\t\t\t\tif (match && !skipRegexp.test(match[1])) {\n\t\t\t\t\tselectors[match[1]] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\t$.each(selectors, function(field, selector) {\n\t\t\t\tvar elements = self.container.find(selector);\n\t\t\t\tif (elements.length) {\n\t\t\t\t\tvar value = self.options.fieldFormatter(field, slot, self.options);\n\n\t\t\t\t\telements\n\t\t\t\t\t\t.empty()\n\t\t\t\t\t\t.append(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar nameInput = null;\n\t\t\tvar mobileInput = null;\n\t\t\tvar emailInput = null;\n\t\t\tvar modeInput = null;\n\t\t\tvar playerCountInput = null;\n\t\t\tvar playersInput = null;\n\t\t\tvar exclusiveInput = null;\n\t\t\tvar notesInput = null;\n\t\t\tvar successorsInputs = null;\n\t\t\tvar bookAction = null;\n\n\t\t\tvar activateForm = function() {\n\t\t\t\tif (\n\t\t\t\t\tnameInput !== null &&\n\t\t\t\t\tmobileInput !== null &&\n\t\t\t\t\temailInput !== null &&\n\t\t\t\t\tmodeInput !== null &&\n\t\t\t\t\tplayerCountInput !== null &&\n\t\t\t\t\tplayersInput !== null &&\n\t\t\t\t\texclusiveInput !== null &&\n\t\t\t\t\tnotesInput !== null &&\n\t\t\t\t\tsuccessorsInputs !== null &&\n\t\t\t\t\tbookAction !== null\n\t\t\t\t) {\n\t\t\t\t\tbookAction.prop('disabled', false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.options.renderNameInput.call(self, slot, function(renderedNameInput) {\n\t\t\t\tnameInput = renderedNameInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderMobileInput.call(self, slot, function(renderedMobileInput) {\n\t\t\t\tmobileInput = renderedMobileInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderEmailInput.call(self, slot, function(renderedEmailInput) {\n\t\t\t\temailInput = renderedEmailInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderModeInput.call(self, slot, function(renderedModeInput) {\n\t\t\t\tmodeInput = renderedModeInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderPlayerCountInput.call(self, slot, function(renderedPlayerCountInput) {\n\t\t\t\tplayerCountInput = renderedPlayerCountInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderPlayersInput.call(self, slot, function(renderedPlayersInput) {\n\t\t\t\tplayersInput = renderedPlayersInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderExclusiveInput.call(self, slot, function(renderedExclusiveInput) {\n\t\t\t\texclusiveInput = renderedExclusiveInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderNotesInput.call(self, slot, function(renderedNotesInput) {\n\t\t\t\tnotesInput = renderedNotesInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderSuccessorsInput.call(self, slot, function(renderedSuccessorsInput) {\n\t\t\t\tsuccessorsInputs = renderedSuccessorsInput;\n\t\t\t\tactivateForm();\n\t\t\t});\n\t\t\tself.options.renderBookAction.call(self, slot, function(renderedBookAction) {\n\t\t\t\tbookAction = renderedBookAction;\n\t\t\t\tbookAction.prop('disabled', true);\n\t\t\t\tactivateForm();\n\t\t\t});\n\n\t\t\tself.options.renderForm.call(self, slot, function(form) {\n\t\t\t\tform.off('submit');\n\t\t\t\tform.submit(function(e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tvar booking = new goboo.Booking();\n\n\t\t\t\t\tself.options.fetchBookingName.call(self, slot, function(name) {\n\t\t\t\t\t\tbooking.setName(name);\n\t\t\t\t\t});\n\t\t\t\t\tself.options.fetchBookingMobile.call(self, slot, function(mobile) {\n\t\t\t\t\t\tbooking.setMobile(mobile);\n\t\t\t\t\t});\n\t\t\t\t\tself.options.fetchBookingEmail.call(self, slot, function(email) {\n\t\t\t\t\t\tbooking.setEmail(email);\n\t\t\t\t\t});\n\t\t\t\t\tself.options.fetchBookingSlots.call(self, slot, function(slots) {\n\t\t\t\t\t\tbooking.setSlots(slots);\n\t\t\t\t\t});\n\t\t\t\t\tself.options.fetchBookingPlayerCount.call(self, slot, function(attendance) {\n\t\t\t\t\t\tbooking.setAttendance(attendance);\n\t\t\t\t\t});\n\t\t\t\t\tself.options.fetchBookingPlayers.call(self, slot, function(players) {\n\t\t\t\t\t\tbooking.setPlayers(players);\n\t\t\t\t\t});\n\t\t\t\t\tself.options.fetchBookingExclusive.call(self, slot, function(exclusive) {\n\t\t\t\t\t\tbooking.setExclusive(exclusive);\n\t\t\t\t\t});\n\t\t\t\t\tself.options.fetchBookingModes.call(self, slot, function(modes) {\n\t\t\t\t\t\tbooking.setPreferredModes(modes);\n\t\t\t\t\t});\n\t\t\t\t\tself.options.fetchBookingNotes.call(self, slot, function(notes) {\n\t\t\t\t\t\tbooking.setNotes(notes);\n\t\t\t\t\t});\n\n\t\t\t\t\tgoboo.env.adapter.bookSlot(\n\t\t\t\t\t\tbooking,\n\t\t\t\t\t\t$.proxy(self.options.onSuccess, self),\n\t\t\t\t\t\t$.proxy(self.options.onFailure, self)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tself.options.postRender.call(self);\n\t\t},\n\n\t\t'fetchBookingName': function(slot, callback) {\n\t\t\tvar selector = this.options.nameInputSelector;\n\t\t\tvar input    = this.container.find(selector);\n\n\t\t\tcallback(input.val());\n\t\t},\n\t\t'fetchBookingMobile': function(slot, callback) {\n\t\t\tvar selector = this.options.mobileInputSelector;\n\t\t\tvar input    = this.container.find(selector);\n\n\t\t\tcallback(input.val());\n\t\t},\n\t\t'fetchBookingEmail': function(slot, callback) {\n\t\t\tvar selector = this.options.emailInputSelector;\n\t\t\tvar input    = this.container.find(selector);\n\n\t\t\tcallback(input.val());\n\t\t},\n\t\t'fetchBookingModes': function(slot, callback) {\n\t\t\tvar selector = this.options.modeInputSelector;\n\t\t\tvar inputs   = this.container.find(selector);\n\n\t\t\tvar modes = [];\n\t\t\t$.each(inputs, function(index, input) {\n\t\t\t\tinput = $(input);\n\t\t\t\tif (input.prop('checked')) {\n\t\t\t\t\tmodes.push(input.val());\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(modes);\n\t\t},\n\t\t'fetchBookingPlayerCount': function(slot, callback) {\n\t\t\tvar selector = this.options.playerCountInputSelector;\n\t\t\tvar input    = this.container.find(selector);\n\n\t\t\tcallback(input.val());\n\t\t},\n\t\t'fetchBookingPlayers': function(slot, callback) {\n\t\t\tvar selector = this.options.playersInputSelector;\n\t\t\tvar element  = this.container.find(selector);\n\t\t\tvar inputs   = element.find('input[name=\"tags\"]');\n\n\t\t\tvar players = [];\n\t\t\tfor (var index = 0; index<inputs.size(); index++) {\n\t\t\t\tvar input = $(inputs[index]);\n\t\t\t\tplayers.push(input.val());\n\t\t\t}\n\n\t\t\tcallback(players);\n\t\t},\n\t\t'fetchBookingExclusive': function(slot, callback) {\n\t\t\tvar selector = this.options.exclusiveInputSelector;\n\t\t\tvar input    = this.container.find(selector);\n\n\t\t\tcallback(input.prop('checked'));\n\t\t},\n\t\t'fetchBookingSlots': function(slot, callback) {\n\t\t\tvar selectionContainerSelector = this.options.successorsContainerInputSelector;\n\t\t\tvar selectionContainer         = this.container.find(selectionContainerSelector);\n\t\t\tvar inputs                     = selectionContainer.find('input');\n\n\t\t\tvar slots = [slot];\n\n\t\t\tif (this.options.successorsSelectionMode == 'subsequent') {\n\t\t\t\tfor (var index = 0; index<inputs.size(); index++) {\n\t\t\t\t\tvar input = $(inputs[index]);\n\t\t\t\t\tif (input.data('slot')) {\n\t\t\t\t\t\tslots.push(input.data('slot'));\n\t\t\t\t\t}\n\t\t\t\t\tif (input.prop('checked')) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.options.successorsSelectionMode == 'undetermined') {\n\t\t\t\tfor (var index = 0; index<inputs.size(); index++) {\n\t\t\t\t\tvar input = $(inputs[index]);\n\t\t\t\t\tif (input.prop('checked') && input.data('slot')) {\n\t\t\t\t\t\tslots.push(input.data('slot'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcallback(slots);\n\t\t},\n\t\t'fetchBookingNotes': function(slot, callback) {\n\t\t\tvar selector = this.options.notesInputSelector;\n\t\t\tvar input    = this.container.find(selector);\n\n\t\t\tcallback(input.val());\n\t\t},\n\n\t\tonSuccess: function(response, xhr) {\n\t\t\tthis.api.refresh();\n\t\t\talert('Die Buchung wurde durchgeführt.');\n\t\t},\n\n\t\tonFailure: function (error, xhr) {\n\t\t\tif (error) {\n\t\t\t\talert(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar json = JSON.parse(xhr.responseText);\n\n\t\t\tif (json.status == 903) {\n\t\t\t\talert('Eine Buchung ist nicht möglich, der Zeitraum ist bereits ausgebucht.');\n\t\t\t}\n\t\t\telse if (json.status == 904) {\n\t\t\t\talert('Eine exklusive Buchung ist nicht möglich, weil in dem Zeitraum bereits gebucht wurde.');\n\t\t\t}\n\t\t\telse if (json.status == 905) {\n\t\t\t\talert('Bitte gib deinen Namen ein.');\n\t\t\t\tvar selector = this.options.nameInputSelector;\n\t\t\t\tthis.container.find(selector).focus();\n\t\t\t}\n\t\t\telse if (json.status == 906) {\n\t\t\t\talert('Bitte gib deine Handynummer ein.');\n\t\t\t\tvar selector = this.options.mobileInputSelector;\n\t\t\t\tthis.container.find(selector).focus();\n\t\t\t}\n\t\t\telse if (json.status == 907) {\n\t\t\t\talert('Bitte gib deine E-Mail ein.');\n\t\t\t\tvar selector = this.options.emailInputSelector;\n\t\t\t\tthis.container.find(selector).focus();\n\t\t\t}\n\t\t\telse {\n\t\t\t\talert('Es ist ein Serverfehler aufgetreten, bitte versuche es später noch einmal.');\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Create a new booking mask to integrate goboo booking system.\n\t *\n\t * @memberOf jQuery\n\t * @access public\n\t * @param object options\n\t */\n\t$.fn.gobooBookingMask = function (options) {\n\t\tif (!goboo.env.adapter) {\n\t\t\tthrow 'You need to initialize the goboo environment first!';\n\t\t}\n\n\t\tvar element = $(this[0]);\n\t\tvar templateOptions = {};\n\t\t$.each(\n\t\t\t{\n\t\t\t\t'room': 'room',\n\t\t\t\t'slot': 'slot',\n\t\t\t\t'bookingMask': 'booking-mask',\n\t\t\t\t'successorsSelectionMode': 'successors-selection-mode',\n\t\t\t\t'startDateTimeFormat': 'start-datetime-format',\n\t\t\t\t'endDateTimeFormat': 'end-datetime-format',\n\t\t\t\t'timeFormat': 'date-format',\n\t\t\t\t'durationDateTimeFormat': 'duration-time-format',\n\t\t\t\t'playTimeDateTimeFormat': 'play-time-format',\n\t\t\t\t'successorDateTimeFormat': 'successor-format',\n\t\t\t\t'idSelector': 'id-selector',\n\t\t\t\t'startDateTimeSelector': 'start-datetime-selector',\n\t\t\t\t'endDateTimeSelector': 'end-datetime-selector',\n\t\t\t\t'durationSelector': 'duration-selector',\n\t\t\t\t'playTimeSelector': 'play-time-selector',\n\t\t\t\t'capacitySelector': 'capacity-selector',\n\t\t\t\t'attendanceSelector': 'attendance-selector',\n\t\t\t\t'modesSelector': 'modes-selector',\n\t\t\t\t'timeSelector': 'time-selector',\n\t\t\t\t'durationDateTimeSelector': 'duration-datetime-selector',\n\t\t\t\t'playTimeDateTimeSelector': 'play-time-datetime-selector',\n\t\t\t\t'formInputSelector': 'form-input-selector',\n\t\t\t\t'nameInputSelector': 'name-input-selector',\n\t\t\t\t'mobileInputSelector': 'mobile-input-selector',\n\t\t\t\t'emailInputSelector': 'email-input-selector',\n\t\t\t\t'modeInputSelector': 'mode-input-selector',\n\t\t\t\t'playerCountInputSelector': 'player-count-input-selector',\n\t\t\t\t'playersInputSelector': 'player-players-input-selector',\n\t\t\t\t'exclusiveInputSelector': 'exclusive-input-selector',\n\t\t\t\t'successorsLoaderActionSelector': 'successors-loader-selector',\n\t\t\t\t'successorsContainerInputSelector': 'successors-selection-selector',\n\t\t\t\t'notesInputSelector': 'player-notes-input-selector',\n\t\t\t\t'bookActionSelector': 'book-action-selector'\n\t\t\t},\n\t\t\tfunction(option, key) {\n\t\t\t\tvar value = element.data('goboo-' + key);\n\t\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\t\ttemplateOptions[option] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\toptions = $.extend({}, $.gobooBookingMask.defaultOptions, options || {}, templateOptions);\n\n\t\tnew (function(container, options) {\n\t\t\tvar self = this;\n\t\t\tself.container = container;\n\t\t\tself.options = options;\n\t\t\tself.currentSlot = null;\n\t\t\tself.api = {\n\t\t\t\t'options': options,\n\t\t\t\t'setSlot': function (slot, room) {\n\t\t\t\t\tif (room !== undefined) {\n\t\t\t\t\t\toptions.room = room;\n\t\t\t\t\t}\n\t\t\t\t\toptions.slot = slot;\n\t\t\t\t\tself.loadSlot(options.slot);\n\t\t\t\t},\n\t\t\t\t'refresh': function() {\n\t\t\t\t\tself.loadSlot(options.slot);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tself.loadSlot = function(slot) {\n\t\t\t\tif (!slot) {\n\t\t\t\t\tself.options.slot = null;\n\t\t\t\t\tself.currentSlot = null;\n\t\t\t\t\tself.container\n\t\t\t\t\t\t.removeClass('goboo_loading')\n\t\t\t\t\t\t.addClass('goboo_no_slot');\n\t\t\t\t\tself.container.trigger('goboo:slot-details:change-slot', null);\n\t\t\t\t}\n\t\t\t\telse if (slot instanceof goboo.Slot) {\n\t\t\t\t\tself.options.slot = slot.getId();\n\t\t\t\t\tself.currentSlot = slot;\n\t\t\t\t\toptions.render.call(self);\n\t\t\t\t\tself.container\n\t\t\t\t\t\t.removeClass('goboo_loading')\n\t\t\t\t\t\t.removeClass('goboo_no_slot');\n\t\t\t\t\tself.container.trigger('goboo:slot-details:change-slot', slot);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tself.container.addClass('goboo_loading');\n\t\t\t\t\tgoboo.env.adapter.getSlot(\n\t\t\t\t\t\tself.options.room,\n\t\t\t\t\t\tslot,\n\t\t\t\t\t\tfunction(slot) {\n\t\t\t\t\t\t\tself.loadSlot(slot);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tcontainer.data('goboo', self.api);\n\n\t\t\tif (options.room && options.slot) {\n\t\t\t\tself.loadSlot(options.slot);\n\t\t\t}\n\t\t\tself.container.removeClass('goboo_initializing');\n\t\t})(element, options);\n\n\t\treturn this;\n\t};\n})(jQuery);\n","/*\n * GoBoo - GET IT. BOOK IT. [http://goboo.de]\n *\n * (c) Tristan Lins <t.lins@goboo.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * jquery client for {@link http://goboo.de goboo - GET IT. BOOK IT}\n *\n * online booking system by karo media\n *\n * @module goboo/Client/jQuery\n * @copyright 2014 {@link mailto:t.lins@goboo.de Tristan Lins}\n * @license {@link http://opensource.org/licenses/MIT MIT}\n * @author Tristan Lins <t.lins@goboo.de>\n * @link http://goboo.de\n */\n\n(function ($) {\n\t\"use strict\";\n\n\t/**\n\t * Helper function to extract hours \"hh\" from a time with format \"hhii\".\n\t *\n\t * @param time\n\t * @returns {int}\n\t */\n\tfunction extractHours(time) {\n\t\treturn parseInt((time / 100) % 100);\n\t}\n\n\t/**\n\t * Helper function to extract minutes \"ii\" from a time with format \"hhii\".\n\t *\n\t * @param time\n\t * @returns {int}\n\t */\n\tfunction extractMinutes(time) {\n\t\treturn parseInt(time % 100);\n\t}\n\n\tvar now = new Date();\n\n\t$.gobooCalendar = {};\n\t$.gobooCalendar.defaultOptions = {\n\t\t/** id of room */\n\t\t'room': '',\n\t\t/** the time span the calendar will display */\n\t\t'timeSpan': '1week',\n\t\t/** the start time the calendar will begin */\n\t\t'startTime': 'week',\n\t\t/** the first day of week, only used to calculate the week start time */\n\t\t'startOfWeek': 0,\n\n\t\t/** count of minutes to create a time indicator */\n\t\t'timesSpan': 60,\n\t\t'timesFormat': '{time}',\n\t\t'timesDateFormat': 'hh:ii',\n\n\t\t/** day date format */\n\t\t'dayDateFormat': 'dd.',\n\t\t/** move the time span of a day */\n\t\t'dayStartOffset': 0,\n\t\t/** predefined start time of the day */\n\t\t'dayStart': false,\n\t\t/** predefined end time of the day */\n\t\t'dayEnd': false,\n\t\t/** current date format */\n\t\t'currentDateFormat': '{from} - {until}',\n\t\t/** current date format for from date */\n\t\t'currentDateFromFormat': 'dd.',\n\t\t/** current date format for from date */\n\t\t'currentDateFromMonthFormat': 'dd.',\n\t\t/** current date format for until date */\n\t\t'currentDateUntilFormat': 'dd. MM',\n\t\t/** current date format for until date */\n\t\t'currentDateUntilMonthFormat': 'dd. MM',\n\n\t\t/** selector to previous button element */\n\t\t'previousButtonSelector': '.goboo_date_selector .goboo_previous',\n\t\t/** selector to next button element */\n\t\t'nextButtonSelector': '.goboo_date_selector .goboo_next',\n\t\t/** selector to current date element */\n\t\t'currentDateSelector': '.goboo_date_selector .goboo_current_date',\n\t\t/** selector to times container element */\n\t\t'timesContainerSelector': '.goboo_calendar .goboo_times',\n\t\t/** selector to days container element */\n\t\t'daysContainerSelector': '.goboo_calendar .goboo_days',\n\n\t\t/** factory to create a time span element */\n\t\t'timeSpanFactory': function(container, time, isFirst, isLast) {\n\t\t\tvar self = this;\n\t\t\tvar dateFormat = container.data('goboo-date-format') || self.options.timesDateFormat;\n\t\t\tvar format = container.data('goboo-format') || self.options.timesFormat;\n\t\t\tvar date = $.formatDateTime(dateFormat, time);\n\t\t\tvar date = format.replace('{time}', date);\n\t\t\tvar element = $('<div></div>')\n\t\t\t\t.addClass('goboo_time-' + $.formatDateTime('hhii', time))\n\t\t\t\t.addClass('goboo_time_span_time_' + $.formatDateTime('hhii', time))\n\t\t\t\t.addClass('goboo_time_span_duration_' + self.options.timesSpan)\n\t\t\t\t.addClass('goboo_time_span')\n\t\t\t\t.html(date);\n\t\t\tif (isFirst) {\n\t\t\t\telement.addClass('goboo_time_span_first');\n\t\t\t}\n\t\t\tif (isLast) {\n\t\t\t\telement.addClass('goboo_time_span_last');\n\t\t\t}\n\t\t\treturn element;\n\t\t},\n\t\t/** factory to create the current date */\n\t\t'currentDateFactory': function(startDate, endDate, currentDateContainer) {\n\t\t\tvar self = this;\n\t\t\tvar currentDateFormat = currentDateContainer.data('goboo-format') || self.options.currentDateFormat;\n\t\t\tvar currentDateFromFormat = currentDateContainer.data('goboo-from-format') || self.options.currentDateFromFormat;\n\t\t\tvar currentDateFromMonthFormat = currentDateContainer.data('goboo-from-month-format') || self.options.currentDateFromMonthFormat;\n\t\t\tvar currentDateUntilFormat = currentDateContainer.data('goboo-until-format') || self.options.currentDateUntilFormat;\n\t\t\tvar currentDateUntilMonthFormat = currentDateContainer.data('goboo-until-month-format') || self.options.currentDateUntilMonthFormat;\n\n\t\t\tvar currentDateFrom = startDate.getMonth() != endDate.getMonth()\n\t\t\t\t? $.formatDateTime(currentDateFromMonthFormat, startDate)\n\t\t\t\t: $.formatDateTime(currentDateFromFormat, startDate);\n\t\t\tvar currentDateUntil = startDate.getMonth() != endDate.getMonth()\n\t\t\t\t? $.formatDateTime(currentDateUntilMonthFormat, endDate)\n\t\t\t\t: $.formatDateTime(currentDateUntilFormat, endDate);\n\n\t\t\tvar currentDate = currentDateFormat\n\t\t\t\t.replace('{from}', currentDateFrom)\n\t\t\t\t.replace('{until}', currentDateUntil);\n\t\t\treturn $('<span></span>').text(currentDate);\n\t\t},\n\t\t/** factory to create a day container, that contains all the day records */\n\t\t'dayContainerFactory': function(date) {\n\t\t\tvar self = this;\n\t\t\tvar dayName = $('<div></div>')\n\t\t\t\t.addClass('goboo_day_name')\n\t\t\t\t.html($.formatDateTime(self.container.data('goboo-day-date-format') || self.options.dayDateFormat, date));\n\n\t\t\tvar day = $.formatDateTime('yymmdd', date);\n\t\t\tvar dayWithoutYear = $.formatDateTime('mmdd', date);\n\t\t\tvar dayOfMonth = $.formatDateTime('dd', date);\n\t\t\tvar dayOfWeek = date.getDay();\n\t\t\treturn $('<div></div>')\n\t\t\t\t.addClass('goboo_day_' + day)\n\t\t\t\t.addClass('goboo_day_of_year_' + dayWithoutYear)\n\t\t\t\t.addClass('goboo_day_of_month_' + dayOfMonth)\n\t\t\t\t.addClass('goboo_day_of_week_' + dayOfWeek)\n\t\t\t\t.addClass('goboo_day')\n\t\t\t\t.append(dayName);\n\t\t},\n\t\t/** factory to create a slot button */\n\t\t'slotButtonFactory': function(slot) {\n\t\t\tvar self = this;\n\t\t\tvar capacity = slot.getCapacity();\n\t\t\tvar attendance = slot.getAttendance();\n\t\t\tvar locked = slot.isLocked();\n\t\t\tvar button = $('<a></a>')\n\t\t\t\t.attr('id', 'goboo_slot_' + slot.getId())\n\t\t\t\t.attr('href', '#goboo_slot_' + slot.getId())\n\t\t\t\t.addClass('goboo_slot_button');\n\t\t\tif (locked) {\n\t\t\t\tbutton.addClass('goboo_slot_locked');\n\t\t\t}\n\t\t\tvar players = $('<span></span>')\n\t\t\t\t.addClass('goboo_slot_players')\n\t\t\t\t.appendTo(button);\n\n\t\t\tfor (var i=1; i<=capacity; i++) {\n\t\t\t\t$('<span></span>')\n\t\t\t\t\t.addClass('goboo_slot_player_' + i)\n\t\t\t\t\t.addClass('goboo_slot_player')\n\t\t\t\t\t.addClass((locked || i <= attendance) ? 'goboo_slot_player_used' : 'goboo_slot_player_free')\n\t\t\t\t\t.appendTo(players);\n\t\t\t}\n\n\t\t\tif (locked || attendance >= capacity) {\n\t\t\t\tbutton.addClass('goboo_slot_full');\n\t\t\t}\n\t\t\tif (attendance == 0) {\n\t\t\t\tbutton.addClass('goboo_slot_empty');\n\t\t\t}\n\n\t\t\tbutton.click(function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.options.showSlotDetails.call(self, slot);\n\t\t\t});\n\n\t\t\treturn button;\n\t\t},\n\t\t/** factory to create a slot dummy */\n\t\t'slotDummyFactory': function(slot) {\n\t\t\tvar capacity = slot.getCapacity();\n\t\t\tvar attendance = slot.getAttendance();\n\t\t\tvar locked = slot.isLocked();\n\t\t\tvar button = $('<span></span>')\n\t\t\t\t.attr('id', 'goboo_slot_' + slot.getId())\n\t\t\t\t.attr('href', '#goboo_slot_' + slot.getId())\n\t\t\t\t.addClass('goboo_slot_button');\n\t\t\tif (locked) {\n\t\t\t\tbutton.addClass('goboo_slot_locked');\n\t\t\t}\n\t\t\tvar players = $('<span></span>')\n\t\t\t\t.addClass('goboo_slot_players')\n\t\t\t\t.appendTo(button);\n\n\t\t\tfor (var i=1; i<=capacity; i++) {\n\t\t\t\t$('<span></span>')\n\t\t\t\t\t.addClass('goboo_slot_player_' + i)\n\t\t\t\t\t.addClass('goboo_slot_player')\n\t\t\t\t\t.addClass((locked || i <= attendance) ? 'goboo_slot_player_used' : 'goboo_slot_player_free')\n\t\t\t\t\t.appendTo(players);\n\t\t\t}\n\n\t\t\tif (locked || attendance >= capacity) {\n\t\t\t\tbutton.addClass('goboo_slot_full');\n\t\t\t}\n\t\t\telse if (attendance == 0) {\n\t\t\t\tbutton.addClass('goboo_slot_empty');\n\t\t\t}\n\n\t\t\treturn button;\n\t\t},\n\t\t/** factory to create the slot container */\n\t\t'slotContainerFactory': function(slot) {\n\t\t\tvar locked = slot.isLocked();\n\n\t\t\tvar time = $.formatDateTime('hhii', slot.getStartDateTime());\n\t\t\tvar container = $('<div></div>')\n\t\t\t\t.addClass('goboo_time_' + time)\n\t\t\t\t.addClass('goboo_slot_time_' + time)\n\t\t\t\t.addClass('goboo_slot_duration_' + slot.getDuration())\n\t\t\t\t.addClass('goboo_slot');\n\n\t\t\tif (locked) {\n\t\t\t\tcontainer.addClass('goboo_slot_locked');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontainer.addClass('goboo_slot_attendance_' + slot.getAttendance());\n\t\t\t}\n\n\t\t\treturn container;\n\t\t},\n\t\t/** factory to create the pause element */\n\t\t'pauseFactory': function(pause, onDayStart, onDayEnd) {\n\t\t\tvar element = $('<div></div>')\n\t\t\t\t.addClass('goboo_pause_' + pause)\n\t\t\t\t.addClass('goboo_pause');\n\t\t\tif (onDayStart) {\n\t\t\t\telement.addClass('goboo_pause_begin');\n\t\t\t}\n\t\t\telse if (onDayEnd) {\n\t\t\t\telement.addClass('goboo_pause_end');\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.addClass('goboo_pause_between');\n\t\t\t}\n\t\t\treturn element;\n\t\t},\n\t\t/** factory to create an element, that indicate that there are no bookable slots */\n\t\t'emptyMessageFactory': function(time) {\n\t\t\treturn $('<div></div>')\n\t\t\t\t.addClass('goboo_empty')\n\t\t\t\t.addClass('goboo_empty_time_' + time);\n\t\t},\n\n\t\t'showSlotDetails': function(slot) {\n\t\t\talert('You must define the showSlotDetails(slot) function!');\n\t\t},\n\n\t\t'renderDay': function(items, dayStartTime, dayEndTime) {\n\t\t\tvar self         = this;\n\t\t\tvar dayContainer = self.options.dayContainerFactory.call(self, items[0].time);\n\t\t\tvar previousItem = null;\n\n\t\t\t$.each(items, function(index, item) {\n\t\t\t\tvar slot      = item.slot;\n\t\t\t\tvar startTime = slot.getStartDateTime();\n\n\t\t\t\tdayStartTime.setDate(startTime.getDate());\n\t\t\t\tdayStartTime.setMonth(startTime.getMonth());\n\t\t\t\tdayStartTime.setYear(startTime.getFullYear());\n\n\t\t\t\tdayEndTime.setDate(startTime.getDate());\n\t\t\t\tdayEndTime.setMonth(startTime.getMonth());\n\t\t\t\tdayEndTime.setYear(startTime.getFullYear());\n\n\t\t\t\tif (dayEndTime.getTime() <= dayStartTime.getTime()) {\n\t\t\t\t\tdayEndTime.setDate(dayEndTime.getDate() + 1);\n\t\t\t\t}\n\n\t\t\t\tvar timeOffset = 0;\n\t\t\t\tif (!previousItem) {\n\t\t\t\t\ttimeOffset = startTime.getTime() - dayStartTime.getTime();\n\t\t\t\t}\n\t\t\t\tif (previousItem) {\n\t\t\t\t\ttimeOffset = startTime.getTime() - previousItem.slot.getEndDateTime().getTime();\n\t\t\t\t}\n\t\t\t\tif (timeOffset > 0) {\n\t\t\t\t\tvar pauseElement = self.options.pauseFactory.call(self, timeOffset / 60000, false, true);\n\t\t\t\t\tdayContainer.append(pauseElement);\n\t\t\t\t}\n\n\t\t\t\tvar slotButton;\n\t\t\t\tif (!slot.isLocked() && slot.getStartDateTime().getTime() > now.getTime()) {\n\t\t\t\t\tslotButton = self.options.slotButtonFactory.call(self, slot);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslotButton = self.options.slotDummyFactory.call(self, slot);\n\t\t\t\t}\n\n\t\t\t\tvar slotElement = self.options.slotContainerFactory.call(self, slot);\n\t\t\t\tslotElement.append(slotButton);\n\t\t\t\tdayContainer.append(slotElement);\n\n\t\t\t\tpreviousItem = item;\n\t\t\t});\n\n\t\t\tvar endTime = previousItem.slot.getEndDateTime();\n\t\t\tvar timeOffset = dayEndTime.getTime() - endTime.getTime();\n\t\t\tif (timeOffset > 0 && timeOffset < 86400000) {\n\t\t\t\tvar pauseElement = self.options.pauseFactory.call(self, timeOffset / 60000, false, true);\n\t\t\t\tdayContainer.append(pauseElement);\n\t\t\t}\n\n\t\t\treturn dayContainer;\n\t\t},\n\n\t\t/** poll the calendar */\n\t\t'polling': false\n\t};\n\n\t/**\n\t * Create a new booking calendar to integrate goboo booking system.\n\t *\n\t * @memberOf jQuery\n\t * @access public\n\t * @param object options\n\t */\n\t$.fn.gobooCalendar = function (options) {\n\t\tif (!goboo.env.adapter) {\n\t\t\tthrow 'You need to initialize the goboo environment first!';\n\t\t}\n\n\t\tvar element = $(this[0]);\n\t\tvar templateOptions = {};\n\t\t$.each(\n\t\t\t{\n\t\t\t\t'room': 'room',\n\t\t\t\t'timeSpan': 'time-span',\n\t\t\t\t'startTime': 'start-time',\n\t\t\t\t'startOfWeek': 'start-of-week',\n\t\t\t\t'timesSpan': 'times-span',\n\t\t\t\t'timesFormat': 'times-format',\n\t\t\t\t'timesDateFormat': 'times-date-format',\n\t\t\t\t'dayDateFormat': 'day-date-format',\n\t\t\t\t'dayStartOffset': 'day-start-offset',\n\t\t\t\t'dayStart': 'day-start',\n\t\t\t\t'dayEnd': 'day-end',\n\t\t\t\t'currentDateFormat': 'current-date-format',\n\t\t\t\t'currentDateFromFormat': 'current-date-from-format',\n\t\t\t\t'currentDateFromMonthFormat': 'current-date-from-month-format',\n\t\t\t\t'currentDateUntilFormat': 'current-date-until-format',\n\t\t\t\t'currentDateUntilMonthFormat': 'current-date-until-month-format',\n\t\t\t\t'previousButtonSelector': 'previous-button-selector',\n\t\t\t\t'nextButtonSelector': 'next-button-selector',\n\t\t\t\t'currentDateSelector': 'current-date-selector',\n\t\t\t\t'timesContainerSelector': 'times-container-selector',\n\t\t\t\t'daysContainerSelector': 'days-container-selector'\n\t\t\t},\n\t\t\tfunction(option, key) {\n\t\t\t\tvar value = element.data('goboo-' + key);\n\t\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\t\ttemplateOptions[option] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tvar options = $.extend({}, $.gobooCalendar.defaultOptions, options || {}, templateOptions);\n\n\t\tif (!options.room) {\n\t\t\tthrow 'Room ID is missing for calendar!';\n\t\t}\n\n\t\tfunction getWeekNumber(d) {\n\t\t\t// Copy date so don't modify original\n\t\t\td = new Date(d);\n\t\t\td.setHours(0,0,0);\n\t\t\t// Set to nearest Thursday: current date + 4 - current day number\n\t\t\t// Make Sunday's day number 7\n\t\t\td.setDate(d.getDate() + 4 - (d.getDay()||7));\n\t\t\t// Get first day of year\n\t\t\tvar yearStart = new Date(d.getFullYear(),0,1);\n\t\t\t// Calculate full weeks to nearest Thursday\n\t\t\tvar weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7)\n\t\t\t// Return array of year and week number\n\t\t\treturn [d.getFullYear(), weekNo];\n\t\t}\n\n\t\tnew (function(container, options) {\n\t\t\tvar self = this;\n\t\t\tself.container = container;\n\t\t\tself.options = options;\n\n\t\t\tself.api = {\n\t\t\t\t'options': options,\n\t\t\t\t'refresh': function() {\n\t\t\t\t\tself.updateSlots();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// parse and evaluate time span\n\t\t\tvar timespanRegexp = /^(\\d+)(hour|day|week|month|year)$/;\n\t\t\tself.timespanMatch = timespanRegexp.exec(options.timeSpan);\n\t\t\tif (!self.timespanMatch) {\n\t\t\t\tthrow 'The time span ' + options.timeSpan + ' is invalid!';\n\t\t\t}\n\n\t\t\t// determinate the start time of the calendar\n\t\t\tself.currentStartTime = new Date();\n\t\t\tself.currentStartTime.setHours(0);\n\t\t\tself.currentStartTime.setMinutes(0);\n\t\t\tself.currentStartTime.setSeconds(0);\n\n\t\t\tif (options.dayStartOffset) {\n\t\t\t\tself.currentStartTime.setHours(options.dayStartOffset);\n\t\t\t}\n\n\t\t\tvar matches = /(month|week|day)(\\+|\\-|=|>=)(\\d+)/.exec(options.startTime);\n\t\t\tif (matches) {\n\t\t\t\toptions.startTime = matches[1];\n\t\t\t\toptions.startTimeOffset = {\n\t\t\t\t\tcomparator: matches[2],\n\t\t\t\t\tvalue: parseInt(matches[3])\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\toptions.startTimeOffset = false;\n\t\t\t}\n\n\t\t\tswitch (options.startTime) {\n\t\t\t\tcase 'month':\n\t\t\t\t\tself.currentStartTime.setDate(1);\n\n\t\t\t\t\tif (options.startTimeOffset) {\n\t\t\t\t\t\tvar value = parseInt(options.startTimeOffset.value);\n\t\t\t\t\t\tswitch (options.startTimeOffset.comparator) {\n\t\t\t\t\t\t\tcase '+':\n\t\t\t\t\t\t\t\tself.currentStartTime.setMonth(\n\t\t\t\t\t\t\t\t\tself.currentStartTime.getMonth() + value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '-':\n\t\t\t\t\t\t\t\tself.currentStartTime.setMonth(\n\t\t\t\t\t\t\t\t\tself.currentStartTime.getMonth() - value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '=':\n\t\t\t\t\t\t\t\tself.currentStartTime.setMonth(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '>=':\n\t\t\t\t\t\t\t\tif (value > self.currentStartTime.getMonth()) {\n\t\t\t\t\t\t\t\t\tself.currentStartTime.setMonth(value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'week':\n\t\t\t\t\tvar dow = self.currentStartTime.getDay();\n\t\t\t\t\tvar days = dow - self.options.startOfWeek;\n\t\t\t\t\twhile (days < 0) {\n\t\t\t\t\t\tdays += 7;\n\t\t\t\t\t}\n\t\t\t\t\tif (days) {\n\t\t\t\t\t\tself.currentStartTime.setDate(self.currentStartTime.getDate() - days);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.startTimeOffset) {\n\t\t\t\t\t\tvar value = options.startTimeOffset.value;\n\t\t\t\t\t\tswitch (options.startTimeOffset.comparator) {\n\t\t\t\t\t\t\tcase '+':\n\t\t\t\t\t\t\t\tself.currentStartTime.setDate(\n\t\t\t\t\t\t\t\t\tself.currentStartTime.getDate() + (7 * value)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '-':\n\t\t\t\t\t\t\t\tself.currentStartTime.setDate(\n\t\t\t\t\t\t\t\t\tself.currentStartTime.getDate() - (7 * value)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '=':\n\t\t\t\t\t\t\t\tvar woy = getWeekNumber(self.currentStartTime);\n\t\t\t\t\t\t\t\tself.currentStartTime.setDate(\n\t\t\t\t\t\t\t\t\tself.currentStartTime.getDate() + (7 * (value - woy[1]))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '>=':\n\t\t\t\t\t\t\t\tvar woy = getWeekNumber(self.currentStartTime);\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tself.currentStartTime.getFullYear() <= woy[0] &&\n\t\t\t\t\t\t\t\t\tvalue > woy[1]\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tself.currentStartTime.setDate(\n\t\t\t\t\t\t\t\t\t\tself.currentStartTime.getDate() + (7 * (value - woy[1]))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'day':\n\t\t\t\t\tif (options.startTimeOffset) {\n\t\t\t\t\t\tvar value = options.startTimeOffset.value;\n\t\t\t\t\t\tswitch (options.startTimeOffset.comparator) {\n\t\t\t\t\t\t\tcase '+':\n\t\t\t\t\t\t\t\tself.currentStartTime.setDate(\n\t\t\t\t\t\t\t\t\tself.currentStartTime.getDate() + value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '-':\n\t\t\t\t\t\t\t\tself.currentStartTime.setDate(\n\t\t\t\t\t\t\t\t\tself.currentStartTime.getDate() - value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '=':\n\t\t\t\t\t\t\t\tself.currentStartTime.setDate(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '>=':\n\t\t\t\t\t\t\t\tif (value > self.currentStartTime.getDate()) {\n\t\t\t\t\t\t\t\t\tself.currentStartTime.setDate(value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow 'Start time ' + self.options.startTime + ' is not known!';\n\t\t\t}\n\n\t\t\tself.minStartTime = new Date(self.currentStartTime);\n\n\t\t\tvar dayStartTime = new Date();\n\t\t\tdayStartTime.setHours(23);\n\t\t\tdayStartTime.setMinutes(59);\n\t\t\tdayStartTime.setSeconds(0);\n\t\t\tdayStartTime.setMilliseconds(0);\n\n\t\t\tvar dayEndTime = new Date();\n\t\t\tdayEndTime.setHours(0);\n\t\t\tdayEndTime.setMinutes(0);\n\t\t\tdayEndTime.setSeconds(0);\n\t\t\tdayEndTime.setMilliseconds(0);\n\n\t\t\tself.currentDayTime = {\n\t\t\t\tstart: dayStartTime,\n\t\t\t\tend: dayEndTime\n\t\t\t};\n\n\t\t\tself.increaseDate = function(date) {\n\t\t\t\tswitch (self.timespanMatch[2]) {\n\t\t\t\t\tcase 'hour':\n\t\t\t\t\t\tdate.setHours(date.getHours() + 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'day':\n\t\t\t\t\t\tdate.setDate(date.getDate() + 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'week':\n\t\t\t\t\t\tdate.setDate(date.getDate() + 7);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\tdate.setMonth(date.getMonth() + 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tdate.setFullYear(date.getFullYear() + 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t}\n\n\t\t\tself.decreaseDate = function(date) {\n\t\t\t\tswitch (self.timespanMatch[2]) {\n\t\t\t\t\tcase 'hour':\n\t\t\t\t\t\tdate.setHours(date.getHours() - 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'day':\n\t\t\t\t\t\tdate.setDate(date.getDate() - 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'week':\n\t\t\t\t\t\tdate.setDate(date.getDate() - 7);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\tdate.setMonth(date.getMonth() - 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tdate.setFullYear(date.getFullYear() - 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Map the slots per day, in relation to the day start offset.\n\t\t\t *\n\t\t\t * @param {goboo.Slot[]} slots\n\t\t\t *\n\t\t\t * @return {Array} Return an array with items { slot: ..., time: ..., rel: ... },\n\t\t\t *                 where slot is the goboo.Slot object,\n\t\t\t *                 time is the slot start time and\n\t\t\t *                 rel is the relative slot start time, depending on the day start offset.\n\t\t\t */\n\t\t\tself.mapSlotsPerDay = function(slots) {\n\t\t\t\tvar slotsPerDay = {};\n\n\t\t\t\tfor (var i=0; i<slots.length; i++) {\n\t\t\t\t\tvar slot = slots[i];\n\t\t\t\t\tvar startTime = slot.getStartDateTime();\n\t\t\t\t\tvar relativeTime;\n\n\t\t\t\t\tif (self.options.dayStartOffset) {\n\t\t\t\t\t\trelativeTime = new Date(startTime);\n\t\t\t\t\t\trelativeTime.setHours(relativeTime.getHours() - self.options.dayStartOffset);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trelativeTime = startTime;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar day  = $.formatDateTime('yymmdd', relativeTime);\n\n\t\t\t\t\tif (!slotsPerDay[day]) {\n\t\t\t\t\t\tslotsPerDay[day] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tslotsPerDay[day].push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tslot: slot,\n\t\t\t\t\t\t\ttime: startTime,\n\t\t\t\t\t\t\trel: relativeTime\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn slotsPerDay;\n\t\t\t};\n\n\t\t\tself.getRequiredDays = function(startDate, endDate) {\n\t\t\t\tvar requiredDate = new Date(startDate);\n\t\t\t\tvar requiredDays = [];\n\n\t\t\t\tdo {\n\t\t\t\t\trequiredDays.push({\n\t\t\t\t\t\tnumeric: $.formatDateTime('yymmdd', requiredDate),\n\t\t\t\t\t\tdate: new Date(requiredDate)\n\t\t\t\t\t});\n\t\t\t\t\trequiredDate.setDate(requiredDate.getDate() + 1);\n\t\t\t\t}\n\t\t\t\twhile (requiredDate.getTime() < endDate.getTime());\n\n\t\t\t\treturn requiredDays;\n\t\t\t};\n\n\t\t\tself.generateTimes = function(slotsPerDay) {\n\t\t\t\tvar minTime = null;\n\t\t\t\tvar maxTime = null;\n\n\t\t\t\tif (self.options.dayStart !== false && self.options.dayEnd !== false) {\n\t\t\t\t\tvar time = self.options.dayStart.toString().split(':');\n\n\t\t\t\t\tminTime = new Date();\n\t\t\t\t\tminTime.setFullYear(2000);\n\t\t\t\t\tminTime.setMonth(0);\n\t\t\t\t\tminTime.setDate(1);\n\t\t\t\t\tminTime.setHours(parseInt(time[0]));\n\t\t\t\t\tminTime.setMinutes(time.length > 1 ? parseInt(time[1]) : 0);\n\t\t\t\t\tminTime.setSeconds(0);\n\t\t\t\t\tminTime.setMilliseconds(0);\n\n\t\t\t\t\ttime = self.options.dayEnd.toString().split(':');\n\n\t\t\t\t\tmaxTime = new Date();\n\t\t\t\t\tmaxTime.setFullYear(2000);\n\t\t\t\t\tmaxTime.setMonth(0);\n\t\t\t\t\tmaxTime.setDate(1);\n\t\t\t\t\tmaxTime.setHours(parseInt(time[0]));\n\t\t\t\t\tmaxTime.setMinutes(time.length > 1 ? parseInt(time[1]) : 0);\n\t\t\t\t\tmaxTime.setSeconds(0);\n\t\t\t\t\tmaxTime.setMilliseconds(0);\n\n\t\t\t\t\tif (maxTime.getTime() < minTime.getTime()) {\n\t\t\t\t\t\tmaxTime.setDate(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$.each(slotsPerDay, function(day, items) {\n\t\t\t\t\t\tvar start = null;\n\t\t\t\t\t\tvar end   = null;\n\n\t\t\t\t\t\t$.each(items, function(index, item) {\n\t\t\t\t\t\t\tif (!start || item.time.getTime() < start.getTime()) {\n\t\t\t\t\t\t\t\tstart = item.time;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!end || item.slot.getEndDateTime().getTime() > end.getTime()) {\n\t\t\t\t\t\t\t\tend = item.slot.getEndDateTime();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tvar currentMinTime = new Date(start);\n\t\t\t\t\t\tcurrentMinTime.setFullYear(2000);\n\t\t\t\t\t\tcurrentMinTime.setMonth(0);\n\t\t\t\t\t\tcurrentMinTime.setDate(1);\n\n\t\t\t\t\t\tvar currentMaxTime = new Date(end);\n\t\t\t\t\t\tcurrentMaxTime.setFullYear(2000);\n\t\t\t\t\t\tcurrentMaxTime.setMonth(0);\n\t\t\t\t\t\tcurrentMaxTime.setDate(1);\n\n\t\t\t\t\t\tif (currentMaxTime.getTime() < currentMinTime.getTime()) {\n\t\t\t\t\t\t\tcurrentMaxTime.setDate(2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!minTime || currentMinTime.getTime() < minTime.getTime()) {\n\t\t\t\t\t\t\tminTime = currentMinTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!maxTime || currentMaxTime.getTime() > maxTime.getTime()) {\n\t\t\t\t\t\t\tmaxTime = currentMaxTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!maxTime) {\n\t\t\t\t\t\tmaxTime = new Date();\n\t\t\t\t\t}\n\t\t\t\t\tif (!minTime) {\n\t\t\t\t\t\tminTime = new Date();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (self.options.dayStart !== false && self.options.dayStart) {\n\t\t\t\t\t\tvar time = self.options.dayStart.toString().split(':');\n\n\t\t\t\t\t\tminTime.setFullYear(2000);\n\t\t\t\t\t\tminTime.setMonth(0);\n\t\t\t\t\t\tminTime.setDate(1);\n\t\t\t\t\t\tminTime.setHours(parseInt(time[0]));\n\t\t\t\t\t\tminTime.setMinutes(time.length > 1 ? parseInt(time[1]) : 0);\n\t\t\t\t\t\tminTime.setSeconds(0);\n\t\t\t\t\t\tminTime.setMilliseconds(0);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.options.dayEnd !== false && self.options.dayEnd) {\n\t\t\t\t\t\tvar time = self.options.dayEnd.toString().split(':');\n\n\t\t\t\t\t\tmaxTime.setFullYear(2000);\n\t\t\t\t\t\tmaxTime.setMonth(0);\n\t\t\t\t\t\tmaxTime.setDate(1);\n\t\t\t\t\t\tmaxTime.setHours(parseInt(time[0]));\n\t\t\t\t\t\tmaxTime.setMinutes(time.length > 1 ? parseInt(time[1]) : 0);\n\t\t\t\t\t\tmaxTime.setSeconds(0);\n\t\t\t\t\t\tmaxTime.setMilliseconds(0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (maxTime.getTime() < minTime.getTime()) {\n\t\t\t\t\t\tmaxTime.setDate(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tself.options.timeSpanFactory &&\n\t\t\t\t\t(\n\t\t\t\t\t\t!self.currentDayTime ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tminTime && maxTime &&\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tself.currentDayTime.start.getTime() != minTime.getTime() ||\n\t\t\t\t\t\t\t\tself.currentDayTime.end.getTime() != maxTime.getTime()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tvar container = self.container.find(options.timesContainerSelector);\n\t\t\t\t\tif (container.length) {\n\t\t\t\t\t\tcontainer.empty();\n\n\t\t\t\t\t\tvar time = new Date(minTime);\n\n\t\t\t\t\t\tvar times = Math.ceil(1440 / options.timesSpan);\n\t\t\t\t\t\twhile (time.getTime() < maxTime.getTime()) {\n\t\t\t\t\t\t\tvar nextTime = new Date(time);\n\t\t\t\t\t\t\tnextTime.setTime(time.getTime() + (1000 * 60 * options.timesSpan));\n\n\t\t\t\t\t\t\tfor (var j=0; j<container.length; j++) {\n\t\t\t\t\t\t\t\tvar singleContainer = $(container[j]);\n\t\t\t\t\t\t\t\tvar element = self.options.timeSpanFactory.call(\n\t\t\t\t\t\t\t\t\tself,\n\t\t\t\t\t\t\t\t\tsingleContainer, time, time.getTime() <= minTime.getTime(), nextTime.getTime() >= maxTime.getTime()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsingleContainer.append(element);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttime.setTime(time.getTime() + (1000 * 60 * options.timesSpan));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tself.currentDayTime = {\n\t\t\t\t\t\tstart: minTime,\n\t\t\t\t\t\tend: maxTime\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn self.currentDayTime;\n\t\t\t};\n\n\t\t\tself.updateSlots = function() {\n\t\t\t\tnow = new Date();\n\t\t\t\tvar startDate = self.currentStartTime;\n\t\t\t\tvar endDate = self.increaseDate(new Date(self.currentStartTime));\n\n\t\t\t\tgoboo.env.adapter.listSlots(\n\t\t\t\t\tself.options.room,\n\t\t\t\t\tstartDate,\n\t\t\t\t\tendDate,\n\t\t\t\t\tfunction(slots) {\n\t\t\t\t\t\tvar slotsPerDay     = self.mapSlotsPerDay(slots);\n\t\t\t\t\t\tvar dayStartEndTime = self.generateTimes(slotsPerDay);\n\t\t\t\t\t\tvar requiredDays    = self.getRequiredDays(startDate, endDate);\n\n\t\t\t\t\t\tvar currentDateContainer = self.container.find(options.currentDateSelector);\n\t\t\t\t\t\tvar daysContainer = self.container.find(options.daysContainerSelector);\n\t\t\t\t\t\tdaysContainer.empty();\n\n\t\t\t\t\t\tvar currentDate = self.options.currentDateFactory.call(self, startDate, endDate, currentDateContainer);\n\t\t\t\t\t\tcurrentDateContainer.empty().append(currentDate);\n\n\t\t\t\t\t\tvar dayStartTime = new Date(dayStartEndTime.start);\n\t\t\t\t\t\tvar dayEndTime   = new Date(dayStartEndTime.end);\n\n\t\t\t\t\t\tif (slots && slots.length) {\n\t\t\t\t\t\t\tvar dayCount = 0;\n\t\t\t\t\t\t\tvar today    = $.formatDateTime('yymmdd', new Date());\n\n\t\t\t\t\t\t\t$.each(slotsPerDay, function(day, items) {\n\t\t\t\t\t\t\t\twhile (requiredDays.length && requiredDays[0].numeric < day) {\n\t\t\t\t\t\t\t\t\tvar requiredDay = requiredDays.shift();\n\n\t\t\t\t\t\t\t\t\tdayStartTime.setDate(requiredDay.date.getDate());\n\t\t\t\t\t\t\t\t\tdayStartTime.setMonth(requiredDay.date.getMonth());\n\t\t\t\t\t\t\t\t\tdayStartTime.setFullYear(requiredDay.date.getFullYear());\n\n\t\t\t\t\t\t\t\t\tdayEndTime.setDate(requiredDay.date.getDate());\n\t\t\t\t\t\t\t\t\tdayEndTime.setMonth(requiredDay.date.getMonth());\n\t\t\t\t\t\t\t\t\tdayEndTime.setFullYear(requiredDay.date.getFullYear());\n\n\t\t\t\t\t\t\t\t\tif (dayEndTime.getTime() < dayStartTime.getTime()) {\n\t\t\t\t\t\t\t\t\t\tdayEndTime.setDate(dayEndTime.getDate() + 1);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar dayContainer = self.options.dayContainerFactory.call(self, requiredDay.date);\n\t\t\t\t\t\t\t\t\tdaysContainer.append(dayContainer);\n\n\t\t\t\t\t\t\t\t\tif ($.formatDateTime('yymmdd', dayStartTime) == today) {\n\t\t\t\t\t\t\t\t\t\tdayContainer.addClass('today');\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar pauseElement = self.options.pauseFactory.call(self, (dayEndTime.getTime() - dayStartTime.getTime()) / 60000, true, true);\n\t\t\t\t\t\t\t\t\tdayContainer.append(pauseElement);\n\n\t\t\t\t\t\t\t\t\tdayCount ++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (requiredDays.length && requiredDays[0].numeric == day) {\n\t\t\t\t\t\t\t\t\trequiredDays.shift();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar dayContainer = self.options.renderDay.call(self, items, dayStartTime, dayEndTime);\n\t\t\t\t\t\t\t\tdaysContainer.append(dayContainer);\n\t\t\t\t\t\t\t\tdayCount ++;\n\n\t\t\t\t\t\t\t\tif (day == today) {\n\t\t\t\t\t\t\t\t\tdayContainer.addClass('today');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\twhile (requiredDays.length) {\n\t\t\t\t\t\t\t\tvar requiredDay = requiredDays.shift();\n\n\t\t\t\t\t\t\t\tdayStartTime.setDate(requiredDay.date.getDate());\n\t\t\t\t\t\t\t\tdayStartTime.setMonth(requiredDay.date.getMonth());\n\t\t\t\t\t\t\t\tdayStartTime.setFullYear(requiredDay.date.getFullYear());\n\n\t\t\t\t\t\t\t\tdayEndTime.setDate(requiredDay.date.getDate());\n\t\t\t\t\t\t\t\tdayEndTime.setMonth(requiredDay.date.getMonth());\n\t\t\t\t\t\t\t\tdayEndTime.setFullYear(requiredDay.date.getFullYear());\n\n\t\t\t\t\t\t\t\tif (dayEndTime.getTime() < dayStartTime.getTime()) {\n\t\t\t\t\t\t\t\t\tdayEndTime.setDate(dayEndTime.getDate() + 1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar dayContainer = self.options.dayContainerFactory.call(self, requiredDay.date);\n\t\t\t\t\t\t\t\tdaysContainer.append(dayContainer);\n\n\t\t\t\t\t\t\t\tif ($.formatDateTime('yymmdd', dayStartTime) == today) {\n\t\t\t\t\t\t\t\t\tdayContainer.addClass('today');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar pauseElement = self.options.pauseFactory.call(self, (dayEndTime.getTime() - dayStartTime.getTime()) / 60000, true, true);\n\t\t\t\t\t\t\t\tdayContainer.append(pauseElement);\n\n\t\t\t\t\t\t\t\tdayCount ++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar classes = (daysContainer.attr('class') || '').split(/\\s+/);\n\t\t\t\t\t\t\tclasses = classes.filter(function(cssClass) {\n\t\t\t\t\t\t\t\treturn !/^goboo_day_count_\\d+$/.test(cssClass);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tclasses.push('goboo_day_count_' + dayCount);\n\t\t\t\t\t\t\tdaysContainer.attr('class', classes.join(' '));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdaysContainer.append(self.options.emptyMessageFactory((dayEndTime - dayStartTime) / 1000));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tself.container.trigger('goboo:slots:update', slots);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tself.updateSlotsDetails = function() {\n\n\t\t\t};\n\n\t\t\tself.previousButton = self.container.find(self.options.previousButtonSelector);\n\t\t\tself.previousButton.addClass('goboo_button_disabled');\n\t\t\tself.previousButton.click(function() {\n\t\t\t\tif (self.currentStartTime.getTime() <= self.minStartTime.getTime()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tself.decreaseDate(self.currentStartTime);\n\t\t\t\tself.updateSlots();\n\t\t\t\tif (self.currentStartTime.getTime() <= self.minStartTime.getTime()) {\n\t\t\t\t\tself.previousButton.addClass('goboo_button_disabled');\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tself.nextButton = self.container.find(self.options.nextButtonSelector);\n\t\t\tself.nextButton.click(function() {\n\t\t\t\tself.increaseDate(self.currentStartTime);\n\t\t\t\tself.updateSlots();\n\t\t\t\tself.previousButton.removeClass('goboo_button_disabled');\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tvar initListener = function() {\n\t\t\t\tself.container\n\t\t\t\t\t.removeClass('goboo_initializing')\n\t\t\t\t\t.addClass('goboo_calendar_ready')\n\t\t\t\t\t.off('goboo.slots-update', initListener);\n\t\t\t}\n\t\t\tself.container.on('goboo:slots:update', initListener);\n\n\t\t\tself.updateSlots();\n\n\t\t\tif (self.options.polling !== false) {\n\t\t\t\tsetInterval(\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tself.updateSlotsDetails();\n\t\t\t\t\t},\n\t\t\t\t\tself.options.polling * 1000\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcontainer.data('goboo', self.api);\n\t\t})(element, options);\n\n\t\treturn this;\n\t};\n})(jQuery);\n"],"sourceRoot":"../sources/javascripts"}